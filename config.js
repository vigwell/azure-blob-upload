require('dotenv').config();

/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
 */

const config = {
    // –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    isDebug: process.env.IS_DEBUG === 'true',
    debugUrl: process.env.DEBUG_URL || 'https://localhost:7000/api',
    realUrl: process.env.REAL_URL || 'https://api.production.com/api',
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏
    chunkSize: parseInt(process.env.CHUNK_SIZE) || 4 * 1024 * 1024, // 4MB
    requestTimeout: parseInt(process.env.REQUEST_TIMEOUT) || 30000,
    maxRetries: parseInt(process.env.MAX_RETRIES) || 3,
    
    // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    companyId: process.env.COMPANY_ID || '3fa85f64-5717-4562-b3fc-2c963f66afa6',
    sessionId: process.env.SESSION_ID || '3fa85f64-5717-4562-b3fc-2c963f66afa6',
    
    // –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
    files: {
        video: process.env.VIDEO_FILE || './sample_video.webm',
        audio: process.env.AUDIO_FILE || './sample_audio.webm'
    }
};

// –í—ã–±–∏—Ä–∞–µ–º API URL –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
config.apiBaseUrl = config.isDebug ? config.debugUrl : config.realUrl;

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π Stream ID
config.streamId = `stream-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;

/**
 * –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
 */
function validateConfig() {
    const errors = [];
    
    if (!config.apiBaseUrl) {
        errors.push('API URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    }
    
    if (config.chunkSize < 1024 * 1024) {
        errors.push('–†–∞–∑–º–µ—Ä —á–∞—Å—Ç–∏ —Å–ª–∏—à–∫–æ–º –º–∞–ª (–º–∏–Ω–∏–º—É–º 1MB)');
    }
    
    if (config.chunkSize > 100 * 1024 * 1024) {
        errors.push('–†–∞–∑–º–µ—Ä —á–∞—Å—Ç–∏ —Å–ª–∏—à–∫–æ–º –≤–µ–ª–∏–∫ (–º–∞–∫—Å–∏–º—É–º 100MB)');
    }
    
    if (config.requestTimeout < 1000) {
        errors.push('–¢–∞–π–º–∞—É—Ç —Å–ª–∏—à–∫–æ–º –º–∞–ª (–º–∏–Ω–∏–º—É–º 1000ms)');
    }
    
    if (config.maxRetries < 1 || config.maxRetries > 10) {
        errors.push('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 10');
    }
    
    return errors;
}

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
 */
function showConfig() {
    console.log('‚öôÔ∏è  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:');
    console.log(`   üîß –†–µ–∂–∏–º: ${config.isDebug ? 'DEBUG' : 'PRODUCTION'}`);
    console.log(`   üåê API URL: ${config.apiBaseUrl}`);
    console.log(`   üì¶ –†–∞–∑–º–µ—Ä —á–∞—Å—Ç–∏: ${formatBytes(config.chunkSize)}`);
    console.log(`   ‚è±Ô∏è  –¢–∞–π–º–∞—É—Ç: ${config.requestTimeout}ms`);
    console.log(`   üîÑ –ü–æ–≤—Ç–æ—Ä—ã: ${config.maxRetries}`);
    console.log(`   üìπ –í–∏–¥–µ–æ —Ñ–∞–π–ª: ${config.files.video}`);
    console.log(`   üéµ –ê—É–¥–∏–æ —Ñ–∞–π–ª: ${config.files.audio}`);
    console.log(`   üÜî Stream ID: ${config.streamId}`);
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–º–µ—Ä –≤ –±–∞–π—Ç–∞—Ö
 */
function formatBytes(bytes) {
    const sizes = ['B', 'KB', 'MB', 'GB'];
    if (bytes === 0) return '0 B';
    const i = Math.floor(Math.log(bytes) / Math.log(1024));
    return Math.round(bytes / Math.pow(1024, i) * 100) / 100 + ' ' + sizes[i];
}

/**
 * –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏
 */
function toggleDebug() {
    config.isDebug = !config.isDebug;
    config.apiBaseUrl = config.isDebug ? config.debugUrl : config.realUrl;
    console.log(`üîß –†–µ–∂–∏–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω –Ω–∞: ${config.isDebug ? 'DEBUG' : 'PRODUCTION'}`);
    console.log(`üåê –ù–æ–≤—ã–π API URL: ${config.apiBaseUrl}`);
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è axios
 */
function getAxiosConfig() {
    const axiosConfig = {
        headers: {
            'accept': '*/*',
            'Content-Type': 'application/json'
        },
        timeout: config.requestTimeout
    };

    // –î–ª—è debug —Ä–µ–∂–∏–º–∞ –æ—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
    if (config.isDebug) {
        const https = require('https');
        axiosConfig.httpsAgent = new https.Agent({
            rejectUnauthorized: false
        });
    }

    return axiosConfig;
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ SAS —Ç–æ–∫–µ–Ω–æ–≤
 */
function getSasRequestData() {
    return {
        companyIdFromUserToken: config.companyId,
        sessionId: config.sessionId,
        streamId: config.streamId
    };
}

module.exports = {
    config,
    validateConfig,
    showConfig,
    toggleDebug,
    getAxiosConfig,
    getSasRequestData,
    formatBytes
};